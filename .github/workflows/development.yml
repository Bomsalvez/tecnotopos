name: Development Checks

on:
  push:
    branches: [ develop, feature/*, bugfix/* ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  # Job de an√°lise de c√≥digo
  lint:
    name: Code Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check file structure
      run: |
        echo "üìÅ Checking project structure..."
        if [ -d "src" ]; then
          echo "‚úÖ src/ directory exists"
          ls -la src/
        else
          echo "‚ùå src/ directory not found"
          exit 1
        fi
        
    - name: Validate HTML
      run: |
        if [ -f "src/index.html" ]; then
          echo "‚úÖ index.html found"
          # Basic HTML validation
          if grep -q "<!DOCTYPE html>" src/index.html; then
            echo "‚úÖ DOCTYPE declaration found"
          else
            echo "‚ö†Ô∏è  DOCTYPE declaration not found"
          fi
        else
          echo "‚ùå index.html not found"
          exit 1
        fi
        
    - name: Check for broken links (basic)
      run: |
        echo "üîó Checking for basic link issues..."
        if grep -r "href=" src/ | grep -v "http" | grep -v "mailto:" | grep -v "tel:"; then
          echo "‚úÖ Internal links found"
        fi

  # Job de build (se necess√°rio)
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: lint
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js (if package.json exists)
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
      if: hashFiles('package.json') != ''
      
    - name: Install dependencies (if package.json exists)
      run: npm ci
      if: hashFiles('package.json') != ''
      
    - name: Build project (if build script exists)
      run: npm run build
      if: hashFiles('package.json') != '' && hashFiles('package.json') != ''
      
    - name: Create build directory for static files
      run: |
        mkdir -p dist
        cp -r src/* dist/
        echo "üì¶ Static files prepared for deployment"

  # Job de seguran√ßa
  security:
    name: Security Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for sensitive files
      run: |
        echo "üîí Checking for sensitive files..."
        if [ -f ".env" ] || [ -f "config.json" ]; then
          echo "‚ö†Ô∏è  Potential sensitive files found"
          ls -la | grep -E "\.(env|json)$" || true
        else
          echo "‚úÖ No obvious sensitive files found"
        fi
        
    - name: Check .gitignore
      run: |
        echo "üìã Checking .gitignore..."
        if [ -f ".gitignore" ]; then
          echo "‚úÖ .gitignore exists"
          cat .gitignore
        else
          echo "‚ö†Ô∏è  .gitignore not found"
        fi

  # Job de performance (b√°sico)
  performance:
    name: Performance Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check file sizes
      run: |
        echo "üìä Checking file sizes..."
        find src/ -type f -name "*.html" -o -name "*.css" -o -name "*.js" | xargs wc -c | sort -n
        
    - name: Check for large images
      run: |
        echo "üñºÔ∏è  Checking image sizes..."
        find src/ -type f \( -name "*.jpg" -o -name "*.jpeg" -o -name "*.png" -o -name "*.gif" -o -name "*.svg" \) -size +1M | head -5 || echo "‚úÖ No large images found" 